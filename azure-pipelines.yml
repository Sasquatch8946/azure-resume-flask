# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - modular3
  paths:
    include:
    - app_svc



variables:
  # Azure Resource Manager connection created during pipeline creation

  azureServiceConnectionId: '87e49c6c-2afb-446c-91bd-6b86b2a362a4'

  azureSubscription: 'crc-ado-pipelines2'

  # Web app name
  webAppName: 'crcapp$(GUID)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'crcapp$(GUID)'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)/app_svc

  # Python version: 3.10
  pythonVersion: '3.10'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzurePowerShell@5
      displayName: 'Deploy app service and front door'
      inputs: 
         azureSubscription: $(azureSubscription)
         azurePowerShellVersion: LatestVersion
         scriptType: 'InlineScript'
         Inline: |
          New-AzResourceGroupDeployment -ResourceGroupName "$(resourceGroup)" -TemplateFile "$(Build.SourcesDirectory)/iac/frontend/frontdoor.bicep" -TemplateParameterObject @{"guidValue"="$(GUID)"}
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

    - task: AzurePowerShell@5
      displayName: 'Deploy App Service and Front Door'
      inputs: 
         azureSubscription: $(azureSubscription)
         azurePowerShellVersion: LatestVersion
         scriptType: 'InlineScript'
         Inline: |
          New-AzResourceGroupDeployment -ResourceGroupName "$(resourceGroup)" -TemplateFile "$(Build.SourcesDirectory)/iac/frontend/frontdoor.bicep" -TemplateParameterObject @{"guidValue"="$(GUID)"}
    
    - task: Bash@3
      displayName: 'run pytest tests'
      inputs: 
       targetType: inline
       script: |
         pwd 
         pip install -r requirements.txt
         python -m pytest tests
       workingDirectory: $(projectRoot)
      env: 
        ENVIRONMENT: $(ENVIRONMENT)
        FUNCTION_URL: $(FUNCTION_URL)

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : $(webAppName)'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
